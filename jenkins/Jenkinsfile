// Fixed Jenkins Pipeline
pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins: agent
spec:
  serviceAccountName: jenkins-deployer
  containers:
  - name: kubectl
    image: bitnami/kubectl:latest
    command:
    - sleep
    args:
    - 3600
    env:
    - name: AWS_DEFAULT_REGION
      value: ap-south-1
    - name: EKS_CLUSTER_NAME
      value: last9-demo
"""
        }
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/muktaa/demo-project.git'
            }
        }

        stage('Deploy to EKS') {
            steps {
                container('kubectl') {
                    sh '''
                        echo "=== Starting EKS Deployment ==="
                        
                        # Update kubeconfig
                        aws eks update-kubeconfig --region ap-south-1 --name last9-demo
                        
                        # Verify connection
                        kubectl get nodes
                        
                        # Create namespace
                        kubectl apply -f k8s/namespace.yaml
                        
                        # Deploy infrastructure
                        kubectl apply -f k8s/postgres.yaml
                        kubectl apply -f k8s/zipkin.yaml
                        
                        # Deploy services
                        kubectl apply -f k8s/user-service.yaml
                        kubectl apply -f k8s/order-service.yaml
                        kubectl apply -f k8s/notification-service.yaml
                        
                        # Show status
                        kubectl get pods -n microservices-demo
                        kubectl get services -n microservices-demo
                    '''
                }
            }
        }
    }

    post {
        always {
            deleteDir()
        }
        success {
            echo '✅ Deployment completed successfully!'
        }
        failure {
            echo '❌ Deployment failed!'
        }
    }
}
