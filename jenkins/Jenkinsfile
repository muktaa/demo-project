pipeline {
    agent {
        kubernetes {
            yamlFile 'jenkins/deploy-pod.yaml'
        }
    }

    environment {
        DOCKER_REGISTRY = 'docker.io/last9mukta'
        KUBE_NAMESPACE = 'last9-otel-demo'
        LAST9_AUTH_HEADER = credentials('last9-auth-header')
    }

    stages {
        stage('Setup Tools') {
            steps {
                container('deployer') {
                    sh '''
                        echo "=== Configuring kubectl ==="
                        aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
                        kubectl version --client
                    '''
                }
            }
        }
        
        stage('Deploy to EKS') {
            steps {
                container('deployer') {
                    sh '''
                        echo "=== Creating namespace ==="
                        kubectl apply -f k8s/namespace.yaml

                        echo "=== Creating secret ==="
                        # Create OpenTelemetry secret
                        kubectl create secret generic otel-secret \
                                    --from-literal=otel-headers="${LAST9_AUTH_HEADER}" \
                                    --namespace ${KUBE_NAMESPACE} \
                                    --dry-run=client -o yaml | kubectl apply -f -

                        echo "=== Deploying PostgreSQL ==="
                        kubectl apply -f k8s/postgres.yaml
                        
                        echo "=== Waiting for PostgreSQL to be ready ==="
                        kubectl wait --for=condition=available --timeout=300s deployment/postgres -n ${KUBE_NAMESPACE}

                        echo "=== Deploying microservices ==="
                        kubectl apply -f k8s/user-service.yaml
                        kubectl apply -f k8s/order-service.yaml
                        kubectl apply -f k8s/notification-service.yaml
                        kubectl apply -f k8s/ingress.yaml

                       echo "=== Deploying otel for tracing ==="
                       kubectl apply -f k8s/otel-collector.yaml
                    '''
                }
            }
        }
    }

    post {
        always {
            deleteDir()
        }
    }
}




