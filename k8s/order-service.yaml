apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: last9-otel-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: docker.io/last9mukta/order-service:otel
        ports:
        - containerPort: 8082
        env:
        - name: OTEL_SERVICE_NAME
          value: "order-service"
        - name: OTEL_EXPORTER_OTLP_HEADERS
          valueFrom:
            secretKeyRef:
              name: otel-secret
              key: otel-headers
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres:5432/orderdb
        - name: SPRING_DATASOURCE_USERNAME
          value: postgres
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: db-password
        - name: USER_SERVICE_URL
          value: "http://user-service:8081"
        envFrom:
        - configMapRef:
            name: otel-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8082
          initialDelaySeconds: 60
          periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: last9-otel-demo
spec:
  selector:
    app: order-service
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
  type: ClusterIP 